# types
type ExtProductFood {
    pId: ID!
    exPid: ID
    exState: Int
    extraName: String
    extraPrice: Float
    state: Int
    pDatCre: DateTime
    pDatMod: DateTime
}
# type OPTIONAL PRODUCT
type ExtProductFoodOptional {
    pId: ID!
    opExPid: ID
    OptionalProName: String
    state: Int
    code: String
    required: Int
    numbersOptionalOnly: Int
    pDatCre: DateTime
    pDatMod: DateTime
    ExtProductFoodsSubOptionalAll: [ExtProductFoodSubOptional]
}
# type SUB_OPTIONAL PRODUCT
type ExtProductFoodSubOptional {
    pId: ID
    opExPid: ID
    idStore: ID
    opSubExPid: ID #main
    OptionalSubProName: String
    exCodeOptionExtra: String #Relaci贸n con ExtProductFoodOptional
    exCode: String #Relaci贸n con ExtProductFoodOptional
    state: Int
    pDatCre: DateTime
    pDatMod: DateTime   
}
input InputExtProductFoodSubOptional {
    pId: ID
    opExPid: ID
    idStore: ID
    opSubExPid: ID #main
    OptionalSubProName: String
    exCodeOptionExtra: String #Relaci贸n con ExtProductFoodOptional
    exCode: String #Relaci贸n con ExtProductFoodOptional
    state: Int
    pDatCre: DateTime
    pDatMod: DateTime   
}
# INPUT OPTIONAL
input InputExtProductFoodOptional {
    pId: ID!
    opExPid: ID
    code: String
    OptionalProName: String
    state: Int
    required: Int
    numbersOptionalOnly: Int
}
# Inputs
input InputExtProductFood {
    pId: ID!
    exPid: ID
    exState: Int
    extraName: String
    extraPrice: Float
    state: Int
    pDatCre: DateTime
    pDatMod: DateTime
}
input ILineItemsExtraFinal {
    setData: [InputExtProductFood]
}
# Queries
type Query {
    "Consulta todos los ExtProductFood"
    ExtProductFoodsOne(pId: ID, cId: ID, dId: ID, ctId: ID ): ExtProductFood
    ExtProductFoodsAll(pId: ID, cId: ID, dId: ID, ctId: ID, search: String, min: Int, max: Int  ): [ExtProductFood]
    ExtProductFoodsLogis(pId: ID, cId: ID, dId: ID, ctId: ID, search: String, min: Int, max: Int  ): [ExtProductFood]
    "Consulta todos los ExtProductFoodOptional"
    ExtProductFoodsOptionalAll(pId: ID, cId: ID, dId: ID, ctId: ID, search: String, min: Int, max: Int  ): [ExtProductFoodOptional]
    ExtProductFoodsOptionalOne(pId: ID, cId: ID, dId: ID, ctId: ID ): ExtProductFoodOptional
    "Consulta todos los ExtSubProductFoodOptional"
    ExtProductFoodsSubOptionalAll(pId: ID, cId: ID, dId: ID, ctId: ID, search: String, min: Int, max: Int  ): [ExtProductFoodSubOptional]
    ExtProductFoodsSubOptionalOne(pId: ID, cId: ID, dId: ID, ctId: ID ): ExtProductFoodSubOptional
}
# Mutations
type Mutation {
    "Registra un ExtProductFood"
    updateExtProductFoods(input: InputExtProductFood): ExtProductFood
    updateMultipleExtProductFoods(inputLineItems: ILineItemsExtraFinal): ExtProductFood
    editExtProductFoods(input: InputExtProductFood!): Response
    deleteextraproductfoods(id: ID, state: Int): Response
    DeleteExtProductFoodsOptional(opExPid: ID, state: Int): Response
    "Registra un ExtProductFoodOptional"
    updateExtProductFoodsOptional(input: InputExtProductFoodOptional): ExtProductFoodOptional
    "Registra un ExtProductFoodSubOptional"
    updateExtProductFoodsSubOptional(input: InputExtProductFoodSubOptional): ExtProductFoodSubOptional
    DeleteExtFoodSubsOptional(opSubExPid: ID, state: Int): Response
}
